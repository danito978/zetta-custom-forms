{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Comprehensive Input Field Schema",
  "description": "A complete schema defining all possible input field types and their configurations",
  "type": "object",
  "properties": {
    "id": {
      "type": "string",
      "description": "Unique identifier for the input field"
    },
    "name": {
      "type": "string",
      "description": "Name attribute for the input field"
    },
    "type": {
      "type": "string",
      "enum": [
        "text",
        "email",
        "password",
        "number",
        "tel",
        "url",
        "search",
        "date",
        "datetime-local",
        "time",
        "month",
        "week",
        "color",
        "range",
        "file",
        "hidden",
        "textarea",
        "select",
        "multiselect",
        "radio",
        "checkbox",
        "switch",
        "rating",
        "slider",
        "autocomplete",
        "tags",
        "rich-text",
        "code",
        "json",
        "group"
      ],
      "description": "Type of input field"
    },
    "label": {
      "type": "string",
      "description": "Display label for the input field"
    },
    "placeholder": {
      "type": "string",
      "description": "Placeholder text shown when input is empty"
    },
    "description": {
      "type": "string",
      "description": "Help text or description for the field"
    },
    "defaultValue": {
      "oneOf": [
        { "type": "string" },
        { "type": "number" },
        { "type": "boolean" },
        { "type": "array" },
        { "type": "object" }
      ],
      "description": "Default value for the input field"
    },
    "required": {
      "type": "boolean",
      "default": false,
      "description": "Whether the field is required"
    },
    "disabled": {
      "type": "boolean",
      "default": false,
      "description": "Whether the field is disabled"
    },
    "fields": {
      "type": "object",
      "description": "Nested fields for group type (only applicable when type is 'group')",
      "patternProperties": {
        "^[a-zA-Z][a-zA-Z0-9_]*$": {
          "$ref": "#"
        }
      }
    },
    "visibilityCondition": {
      "type": "object",
      "description": "Conditions that determine when this field/group should be visible",
      "properties": {
        "field": {
          "type": "string",
          "description": "Name of the field whose value determines visibility"
        },
        "operator": {
          "type": "string",
          "enum": ["equals", "not_equals", "contains", "not_contains", "in", "not_in", "exists", "not_exists"],
          "description": "Comparison operator for the condition"
        },
        "value": {
          "oneOf": [
            {"type": "string"},
            {"type": "number"},
            {"type": "boolean"},
            {"type": "array", "items": {"oneOf": [{"type": "string"}, {"type": "number"}, {"type": "boolean"}]}}
          ],
          "description": "Value(s) to compare against"
        },
        "logic": {
          "type": "string",
          "enum": ["and", "or"],
          "default": "and",
          "description": "Logic operator when multiple conditions exist"
        },
        "conditions": {
          "type": "array",
          "description": "Multiple conditions for complex visibility rules",
          "items": {
            "type": "object",
            "properties": {
              "field": {"type": "string"},
              "operator": {
                "type": "string",
                "enum": ["equals", "not_equals", "contains", "not_contains", "in", "not_in", "exists", "not_exists"]
              },
              "value": {
                "oneOf": [
                  {"type": "string"},
                  {"type": "number"},
                  {"type": "boolean"},
                  {"type": "array", "items": {"oneOf": [{"type": "string"}, {"type": "number"}, {"type": "boolean"}]}}
                ]
              }
            },
            "required": ["field", "operator"]
          }
        }
      },
      "anyOf": [
        {"required": ["field", "operator"]},
        {"required": ["conditions"]}
      ]
    },
    "validation": {
      "type": "object",
      "properties": {
        "min": {
          "type": "number",
          "description": "Minimum value (for numbers) or length (for strings)"
        },
        "max": {
          "type": "number",
          "description": "Maximum value (for numbers) or length (for strings)"
        },
        "minLength": {
          "type": "number",
          "description": "Minimum string length"
        },
        "maxLength": {
          "type": "number",
          "description": "Maximum string length"
        },
        "pattern": {
          "type": "string",
          "description": "Regular expression pattern for validation"
        },
        "format": {
          "type": "string",
          "enum": ["email", "url", "date", "time", "datetime", "phone", "postal-code", "credit-card"],
          "description": "Predefined format validation"
        },
        "custom": {
          "type": "string",
          "description": "Custom validation function name or expression"
        },
        "messages": {
          "type": "object",
          "properties": {
            "required": { "type": "string" },
            "min": { "type": "string" },
            "max": { "type": "string" },
            "minLength": { "type": "string" },
            "maxLength": { "type": "string" },
            "pattern": { "type": "string" },
            "format": { "type": "string" },
            "custom": { "type": "string" }
          },
          "description": "Custom validation error messages"
        },
        "conditionalRules": {
          "type": "array",
          "description": "Validation rules that apply based on other field values",
          "items": {
            "type": "object",
            "properties": {
              "condition": {
                "type": "object",
                "description": "Condition that must be met for this rule to apply",
                "properties": {
                  "field": {
                    "type": "string",
                    "description": "Name of the field whose value determines the rule"
                  },
                  "operator": {
                    "type": "string",
                    "enum": ["equals", "not_equals", "contains", "not_contains", "in", "not_in", "exists", "not_exists"],
                    "description": "Comparison operator for the condition"
                  },
                  "value": {
                    "oneOf": [
                      {"type": "string"},
                      {"type": "number"},
                      {"type": "boolean"},
                      {"type": "array", "items": {"oneOf": [{"type": "string"}, {"type": "number"}, {"type": "boolean"}]}}
                    ],
                    "description": "Value(s) to compare against"
                  }
                },
                "required": ["field", "operator"]
              },
              "validation": {
                "type": "object",
                "description": "Validation rules to apply when condition is met",
                "properties": {
                  "required": {"type": "boolean"},
                  "min": {"type": "number"},
                  "max": {"type": "number"},
                  "minLength": {"type": "number"},
                  "maxLength": {"type": "number"},
                  "pattern": {"type": "string"},
                  "format": {
                    "type": "string",
                    "enum": ["email", "url", "date", "time", "datetime", "phone", "postal-code", "credit-card"]
                  },
                  "custom": {"type": "string"},
                  "messages": {
                    "type": "object",
                    "properties": {
                      "required": {"type": "string"},
                      "min": {"type": "string"},
                      "max": {"type": "string"},
                      "minLength": {"type": "string"},
                      "maxLength": {"type": "string"},
                      "pattern": {"type": "string"},
                      "format": {"type": "string"},
                      "custom": {"type": "string"}
                    }
                  }
                }
              }
            },
            "required": ["condition", "validation"]
          }
        }
      },
      "description": "Validation rules for the input field"
    }
  }
}
